// <auto-generated />
using System;
using CicekSepeti.DataAccess.Concrate;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CicekSepeti.DataAccess.Migrations
{
    [DbContext(typeof(CicekSepetiDbContext))]
    [Migration("20201123133933_createDb")]
    partial class createDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CicekSepeti.Entity.Entities.SchemaProduct.Categories", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<long?>("Root_Category_Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Root_Category_Id");

                    b.ToTable("Categories", "PRODUCT");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Is_Deleted = false,
                            Name = "category1",
                            Order = 1,
                            Status = true
                        },
                        new
                        {
                            Id = 2L,
                            Is_Deleted = false,
                            Name = "category2",
                            Order = 2,
                            Status = true
                        },
                        new
                        {
                            Id = 3L,
                            Is_Deleted = false,
                            Name = "childcategory3ofc1",
                            Order = 3,
                            Root_Category_Id = 1L,
                            Status = true
                        },
                        new
                        {
                            Id = 4L,
                            Is_Deleted = false,
                            Name = "childcategory4ofc3",
                            Order = 4,
                            Root_Category_Id = 3L,
                            Status = true
                        });
                });

            modelBuilder.Entity("CicekSepeti.Entity.Entities.SchemaProduct.Products", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("Category_Id")
                        .HasColumnType("bigint");

                    b.Property<int>("InStock")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Product_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Category_Id");

                    b.ToTable("Products", "PRODUCT");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Category_Id = 1L,
                            InStock = 5,
                            Is_Deleted = false,
                            Name = "product1",
                            Order = 1,
                            Price = 1000m,
                            Product_Code = "pCode1",
                            Status = true
                        },
                        new
                        {
                            Id = 2L,
                            Category_Id = 3L,
                            InStock = 1500,
                            Is_Deleted = false,
                            Name = "product2",
                            Order = 2,
                            Price = 200m,
                            Product_Code = "pCode2",
                            Status = true
                        },
                        new
                        {
                            Id = 3L,
                            Category_Id = 4L,
                            InStock = 0,
                            Is_Deleted = false,
                            Name = "product3",
                            Order = 3,
                            Price = 300m,
                            Product_Code = "pCode3",
                            Status = true
                        },
                        new
                        {
                            Id = 4L,
                            Category_Id = 4L,
                            InStock = 100000,
                            Is_Deleted = false,
                            Name = "product4",
                            Order = 4,
                            Price = 20m,
                            Product_Code = "pCode4",
                            Status = true
                        });
                });

            modelBuilder.Entity("CicekSepeti.Entity.Entities.SchemaShopping.ShoppingCartItems", b =>
                {
                    b.Property<long>("Product_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("ShoppingCart_Id")
                        .HasColumnType("bigint");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.HasKey("Product_Id", "ShoppingCart_Id");

                    b.HasIndex("ShoppingCart_Id");

                    b.ToTable("ShoppingCartItem", "SHOPPING");
                });

            modelBuilder.Entity("CicekSepeti.Entity.Entities.SchemaShopping.ShoppingCarts", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("User_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("User_Id");

                    b.ToTable("ShoppingCarts", "SHOPPING");
                });

            modelBuilder.Entity("CicekSepeti.Entity.Entities.SchemaUser.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Is_Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", "USER");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Is_Deleted = false,
                            Name = "test1",
                            Password = "test1",
                            Status = true,
                            SurName = "test1"
                        },
                        new
                        {
                            Id = 2,
                            Is_Deleted = false,
                            Name = "test2",
                            Password = "test2",
                            Status = true,
                            SurName = "test2"
                        });
                });

            modelBuilder.Entity("CicekSepeti.Entity.Entities.SchemaProduct.Categories", b =>
                {
                    b.HasOne("CicekSepeti.Entity.Entities.SchemaProduct.Categories", "RootCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("Root_Category_Id");

                    b.Navigation("RootCategory");
                });

            modelBuilder.Entity("CicekSepeti.Entity.Entities.SchemaProduct.Products", b =>
                {
                    b.HasOne("CicekSepeti.Entity.Entities.SchemaProduct.Categories", "Category")
                        .WithMany("Products")
                        .HasForeignKey("Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CicekSepeti.Entity.Entities.SchemaShopping.ShoppingCartItems", b =>
                {
                    b.HasOne("CicekSepeti.Entity.Entities.SchemaProduct.Products", "Product")
                        .WithMany("ShoppingCartItems")
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CicekSepeti.Entity.Entities.SchemaShopping.ShoppingCarts", "ShoppingCart")
                        .WithMany("ShoppingCartItems")
                        .HasForeignKey("ShoppingCart_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("CicekSepeti.Entity.Entities.SchemaShopping.ShoppingCarts", b =>
                {
                    b.HasOne("CicekSepeti.Entity.Entities.SchemaUser.Users", "User")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CicekSepeti.Entity.Entities.SchemaProduct.Categories", b =>
                {
                    b.Navigation("ChildCategories");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("CicekSepeti.Entity.Entities.SchemaProduct.Products", b =>
                {
                    b.Navigation("ShoppingCartItems");
                });

            modelBuilder.Entity("CicekSepeti.Entity.Entities.SchemaShopping.ShoppingCarts", b =>
                {
                    b.Navigation("ShoppingCartItems");
                });

            modelBuilder.Entity("CicekSepeti.Entity.Entities.SchemaUser.Users", b =>
                {
                    b.Navigation("ShoppingCarts");
                });
#pragma warning restore 612, 618
        }
    }
}
